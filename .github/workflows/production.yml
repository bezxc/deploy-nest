name: publish

on:
  push:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.actor }}/nest-deploy:latest

jobs:
    publish:
        name: Build and push image stage
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v3
        - name: Login
          run: |
            echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        - name: Build and Publish
          run: |
            docker build . --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    deploy:
      name: Deploy stage
      runs-on: ubuntu-latest
      needs: publish
      steps:
        uses: appleboy/ssh-action@master
          env:
            GITHUB_USERNAME: bezxc
            GITHUB_TOKEN: ${{ secrets.PAT }}
          with:
            host: ${{ secrets.SSH_HOST }}
            port: 22
            username: ${{ secrets.SSH_USER }}
            key: ${{ secrets.SSH_KEY }}
            envs: GITHUB_USERNAME, GITHUB_TOKEN
            script: |
              docker login ghcr.io -u bezxc -p $GITHUB_TOKEN

      # steps:
      # - name: install ssh keys
      # # check this thread to understand why its needed:
      # # https://stackoverflow.com/a/70447517
      #   run: |
      #     install -m 600 -D /dev/null ~/.ssh/id_rsa
      #     echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
      #     ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
      # - name: connect and pull
      #   run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker login ghcr.io -u ${{ github.actor }} --password-stdin && cd ${{ secrets.WORK_DIR }} && docker compose pull && docker compose up -d && exit"
      # - name: cleanup
      #   run: rm -rf ~/.ssh